{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { Layout } from \"../components/layout/layout\";\nimport { Button, Segment, Grid, Divider } from \"semantic-ui-react\";\nimport { NewNadeImagePlaceholder } from \"../components/newnade/NewNadeImagePlaceholder\";\nimport { NewNadeGfycatModal } from \"../components/newnade/NewNadeGfycatModal\";\nimport { NewNadeGfycat } from \"../components/newnade/NewNadeGfycat\";\n\nvar NewNadePage = function NewNadePage() {\n  var _useState = useState(false),\n      isGfycatModalVisisble = _useState[0],\n      setIsGfycatModalVisisble = _useState[1];\n\n  var _useState2 = useState(null),\n      gfycatID = _useState2[0],\n      setGfycatID = _useState2[1];\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"jsx-3344256073\" + \" \" + \"nade-new-container\"\n  }, __jsx(\"h2\", {\n    className: \"jsx-3344256073\"\n  }, \"Add new nade\"), __jsx(Segment, {\n    placeholder: true\n  }, __jsx(Grid, {\n    columns: 2,\n    stackable: true,\n    textAlign: \"center\"\n  }, __jsx(Divider, {\n    vertical: true\n  }, \"And\"), __jsx(Grid.Row, {\n    verticalAlign: \"middle\"\n  }, __jsx(Grid.Column, null, __jsx(NewNadeGfycat, null)), __jsx(Grid.Column, null, __jsx(NewNadeImagePlaceholder, null))))), __jsx(Button, {\n    disabled: true,\n    color: \"green\"\n  }, \"Submit\")), __jsx(NewNadeGfycatModal, {\n    setGfycat: setGfycatID,\n    visible: isGfycatModalVisisble,\n    onDismiss: function onDismiss() {\n      return setIsGfycatModalVisisble(false);\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3344256073\"\n  }, \".nade-new-container.jsx-3344256073{margin:18px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWxsZXQvRGV2ZWxvcG1lbnQvQ3NHb05hZGVzL2NzZ29uYWRlcy1jbGllbnQvc3JjL3BhZ2Vjb250YWluZXJzL25ld25hZGVwYWdlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRFMsQUFHeUIsWUFDZCIsImZpbGUiOiIvVXNlcnMvbWVsbGV0L0RldmVsb3BtZW50L0NzR29OYWRlcy9jc2dvbmFkZXMtY2xpZW50L3NyYy9wYWdlY29udGFpbmVycy9uZXduYWRlcGFnZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGQywgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IExheW91dCB9IGZyb20gXCIuLi9jb21wb25lbnRzL2xheW91dC9sYXlvdXRcIjtcbmltcG9ydCB7XG4gIEJ1dHRvbixcbiAgU2VnbWVudCxcbiAgR3JpZCxcbiAgRGl2aWRlcixcbiAgSGVhZGVyLFxuICBJY29uXG59IGZyb20gXCJzZW1hbnRpYy11aS1yZWFjdFwiO1xuaW1wb3J0IHsgTmV3TmFkZUltYWdlUGxhY2Vob2xkZXIgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9uZXduYWRlL05ld05hZGVJbWFnZVBsYWNlaG9sZGVyXCI7XG5pbXBvcnQgeyBOZXdOYWRlR2Z5Y2F0TW9kYWwgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9uZXduYWRlL05ld05hZGVHZnljYXRNb2RhbFwiO1xuaW1wb3J0IHsgR2Z5Q2F0UGxheWVyIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvbmFkZXBhZ2UvR2Z5Y2F0UGxheWVyXCI7XG5pbXBvcnQgeyBOZXdOYWRlR2Z5Y2F0IH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvbmV3bmFkZS9OZXdOYWRlR2Z5Y2F0XCI7XG5cbmNvbnN0IE5ld05hZGVQYWdlOiBGQyA9ICgpID0+IHtcbiAgY29uc3QgW2lzR2Z5Y2F0TW9kYWxWaXNpc2JsZSwgc2V0SXNHZnljYXRNb2RhbFZpc2lzYmxlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2dmeWNhdElELCBzZXRHZnljYXRJRF0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hZGUtbmV3LWNvbnRhaW5lclwiPlxuICAgICAgICA8aDI+QWRkIG5ldyBuYWRlPC9oMj5cbiAgICAgICAgPFNlZ21lbnQgcGxhY2Vob2xkZXI+XG4gICAgICAgICAgPEdyaWQgY29sdW1ucz17Mn0gc3RhY2thYmxlIHRleHRBbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgICAgPERpdmlkZXIgdmVydGljYWw+QW5kPC9EaXZpZGVyPlxuXG4gICAgICAgICAgICA8R3JpZC5Sb3cgdmVydGljYWxBbGlnbj1cIm1pZGRsZVwiPlxuICAgICAgICAgICAgICA8R3JpZC5Db2x1bW4+XG4gICAgICAgICAgICAgICAgPE5ld05hZGVHZnljYXQgLz5cbiAgICAgICAgICAgICAgPC9HcmlkLkNvbHVtbj5cblxuICAgICAgICAgICAgICA8R3JpZC5Db2x1bW4+XG4gICAgICAgICAgICAgICAgPE5ld05hZGVJbWFnZVBsYWNlaG9sZGVyIC8+XG4gICAgICAgICAgICAgIDwvR3JpZC5Db2x1bW4+XG4gICAgICAgICAgICA8L0dyaWQuUm93PlxuICAgICAgICAgIDwvR3JpZD5cbiAgICAgICAgPC9TZWdtZW50PlxuICAgICAgICA8QnV0dG9uIGRpc2FibGVkIGNvbG9yPVwiZ3JlZW5cIj5cbiAgICAgICAgICBTdWJtaXRcbiAgICAgICAgPC9CdXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxOZXdOYWRlR2Z5Y2F0TW9kYWxcbiAgICAgICAgc2V0R2Z5Y2F0PXtzZXRHZnljYXRJRH1cbiAgICAgICAgdmlzaWJsZT17aXNHZnljYXRNb2RhbFZpc2lzYmxlfVxuICAgICAgICBvbkRpc21pc3M9eygpID0+IHNldElzR2Z5Y2F0TW9kYWxWaXNpc2JsZShmYWxzZSl9XG4gICAgICAvPlxuXG4gICAgICA8c3R5bGUganN4PlxuICAgICAgICB7YFxuICAgICAgICAgIC5uYWRlLW5ldy1jb250YWluZXIge1xuICAgICAgICAgICAgbWFyZ2luOiAxOHB4O1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgIDwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuXG5leHBvcnQgeyBOZXdOYWRlUGFnZSB9O1xuIl19 */\\n/*@ sourceURL=/Users/mellet/Development/CsGoNades/csgonades-client/src/pagecontainers/newnadepage.tsx */\"));\n};\n\nexport { NewNadePage };","map":{"version":3,"sources":["/Users/mellet/Development/CsGoNades/csgonades-client/src/pagecontainers/newnadepage.tsx"],"names":["useState","Layout","Button","Segment","Grid","Divider","NewNadeImagePlaceholder","NewNadeGfycatModal","NewNadeGfycat","NewNadePage","isGfycatModalVisisble","setIsGfycatModalVisisble","gfycatID","setGfycatID"],"mappings":";;;AAAA,SAAaA,QAAb,QAA6B,OAA7B;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,IAHF,EAIEC,OAJF,QAOO,mBAPP;AAQA,SAASC,uBAAT,QAAwC,+CAAxC;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AAEA,SAASC,aAAT,QAA8B,qCAA9B;;AAEA,IAAMC,WAAe,GAAG,SAAlBA,WAAkB,GAAM;AAAA,kBAC8BT,QAAQ,CAAC,KAAD,CADtC;AAAA,MACrBU,qBADqB;AAAA,MACEC,wBADF;;AAAA,mBAEIX,QAAQ,CAAgB,IAAhB,CAFZ;AAAA,MAErBY,QAFqB;AAAA,MAEXC,WAFW;;AAI5B,SACE,MAAC,MAAD,QACE;AAAA,wCAAe;AAAf,KACE;AAAA;AAAA,oBADF,EAEE,MAAC,OAAD;AAAS,IAAA,WAAW;AAApB,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,SAAS,MAA3B;AAA4B,IAAA,SAAS,EAAC;AAAtC,KACE,MAAC,OAAD;AAAS,IAAA,QAAQ;AAAjB,WADF,EAGE,MAAC,IAAD,CAAM,GAAN;AAAU,IAAA,aAAa,EAAC;AAAxB,KACE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,aAAD,OADF,CADF,EAKE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,uBAAD,OADF,CALF,CAHF,CADF,CAFF,EAiBE,MAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,KAAK,EAAC;AAAvB,cAjBF,CADF,EAsBE,MAAC,kBAAD;AACE,IAAA,SAAS,EAAEA,WADb;AAEE,IAAA,OAAO,EAAEH,qBAFX;AAGE,IAAA,SAAS,EAAE;AAAA,aAAMC,wBAAwB,CAAC,KAAD,CAA9B;AAAA;AAHb,IAtBF;AAAA;AAAA,wzFADF;AAsCD,CA1CD;;AA4CA,SAASF,WAAT","sourcesContent":["import { FC, useState } from \"react\";\nimport { Layout } from \"../components/layout/layout\";\nimport {\n  Button,\n  Segment,\n  Grid,\n  Divider,\n  Header,\n  Icon\n} from \"semantic-ui-react\";\nimport { NewNadeImagePlaceholder } from \"../components/newnade/NewNadeImagePlaceholder\";\nimport { NewNadeGfycatModal } from \"../components/newnade/NewNadeGfycatModal\";\nimport { GfyCatPlayer } from \"../components/nadepage/GfycatPlayer\";\nimport { NewNadeGfycat } from \"../components/newnade/NewNadeGfycat\";\n\nconst NewNadePage: FC = () => {\n  const [isGfycatModalVisisble, setIsGfycatModalVisisble] = useState(false);\n  const [gfycatID, setGfycatID] = useState<string | null>(null);\n\n  return (\n    <Layout>\n      <div className=\"nade-new-container\">\n        <h2>Add new nade</h2>\n        <Segment placeholder>\n          <Grid columns={2} stackable textAlign=\"center\">\n            <Divider vertical>And</Divider>\n\n            <Grid.Row verticalAlign=\"middle\">\n              <Grid.Column>\n                <NewNadeGfycat />\n              </Grid.Column>\n\n              <Grid.Column>\n                <NewNadeImagePlaceholder />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <Button disabled color=\"green\">\n          Submit\n        </Button>\n      </div>\n      <NewNadeGfycatModal\n        setGfycat={setGfycatID}\n        visible={isGfycatModalVisisble}\n        onDismiss={() => setIsGfycatModalVisisble(false)}\n      />\n\n      <style jsx>\n        {`\n          .nade-new-container {\n            margin: 18px;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n};\n\nexport { NewNadePage };\n"]},"metadata":{},"sourceType":"module"}