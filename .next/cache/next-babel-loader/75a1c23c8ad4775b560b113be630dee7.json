{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport { initReduxStore } from \"../src/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props; //@ts-ignore\n\n    const store = this.props.store;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(PersistGate, {\n      persistor: store.__PERSISTOR,\n      loading: null\n    }, __jsx(Head, null, __jsx(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,700,900\",\n      rel: \"stylesheet\",\n      key: \"google-font-roboto\",\n      className: \"jsx-637509870\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\",\n      className: \"jsx-637509870\"\n    })), __jsx(Component, _extends({}, pageProps, {\n      className: \"jsx-637509870\" + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\")\n    })), __jsx(_JSXStyle, {\n      id: \"637509870\"\n    }, \"html{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}*,*:before,*:after{-webkit-box-sizing:inherit;-moz-box-sizing:inherit;box-sizing:inherit;}body{font-family:\\\"Roboto\\\",sans-serif;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWxsZXQvRGV2ZWxvcG1lbnQvQ3NHb05hZGVzL2NzZ29uYWRlcy1jbGllbnQvcGFnZXMvX2FwcC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEM2QixBQUc2QyxBQU9ILEFBTU0sMkJBTFQsR0FQRyxFQWE3QixtQkFMcUIsTUFQRyxhQVF4QixTQVBBIiwiZmlsZSI6Ii9Vc2Vycy9tZWxsZXQvRGV2ZWxvcG1lbnQvQ3NHb05hZGVzL2NzZ29uYWRlcy1jbGllbnQvcGFnZXMvX2FwcC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQXBwLCB7IEFwcENvbnRleHQgfSBmcm9tIFwibmV4dC9hcHBcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCB3aXRoUmVkdXggZnJvbSBcIm5leHQtcmVkdXgtd3JhcHBlclwiO1xuaW1wb3J0IHsgaW5pdFJlZHV4U3RvcmUgfSBmcm9tIFwiLi4vc3JjL3N0b3JlXCI7XG5pbXBvcnQgeyBQZXJzaXN0R2F0ZSB9IGZyb20gXCJyZWR1eC1wZXJzaXN0L2ludGVncmF0aW9uL3JlYWN0XCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuXG5jbGFzcyBNeUFwcCBleHRlbmRzIEFwcCB7XG4gIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBDb21wb25lbnQsIGN0eCB9OiBBcHBDb250ZXh0KSB7XG4gICAgbGV0IHBhZ2VQcm9wcyA9IHt9O1xuXG4gICAgaWYgKENvbXBvbmVudC5nZXRJbml0aWFsUHJvcHMpIHtcbiAgICAgIHBhZ2VQcm9wcyA9IGF3YWl0IENvbXBvbmVudC5nZXRJbml0aWFsUHJvcHMoY3R4KTtcbiAgICB9XG5cbiAgICByZXR1cm4geyBwYWdlUHJvcHMgfTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IENvbXBvbmVudCwgcGFnZVByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgIC8vQHRzLWlnbm9yZVxuICAgIGNvbnN0IHN0b3JlID0gdGhpcy5wcm9wcy5zdG9yZSBhcyBhbnk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XG4gICAgICAgIDxQZXJzaXN0R2F0ZSBwZXJzaXN0b3I9e3N0b3JlLl9fUEVSU0lTVE9SfSBsb2FkaW5nPXtudWxsfT5cbiAgICAgICAgICA8SGVhZD5cbiAgICAgICAgICAgIDxsaW5rXG4gICAgICAgICAgICAgIGhyZWY9XCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvOjMwMCw0MDAsNzAwLDkwMFwiXG4gICAgICAgICAgICAgIHJlbD1cInN0eWxlc2hlZXRcIlxuICAgICAgICAgICAgICBrZXk9XCJnb29nbGUtZm9udC1yb2JvdG9cIlxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPGxpbmtcbiAgICAgICAgICAgICAgcmVsPVwic3R5bGVzaGVldFwiXG4gICAgICAgICAgICAgIGhyZWY9XCIvL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9zZW1hbnRpYy11aS8yLjIuMTEvc2VtYW50aWMubWluLmNzc1wiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvSGVhZD5cblxuICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cblxuICAgICAgICAgIDxzdHlsZSBnbG9iYWwganN4PntgXG4gICAgICAgICAgICBodG1sIHtcbiAgICAgICAgICAgICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAqLFxuICAgICAgICAgICAgKjpiZWZvcmUsXG4gICAgICAgICAgICAqOmFmdGVyIHtcbiAgICAgICAgICAgICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICAgICAgICAgICAgICAtbW96LWJveC1zaXppbmc6IGluaGVyaXQ7XG4gICAgICAgICAgICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvUGVyc2lzdEdhdGU+XG4gICAgICA8L1Byb3ZpZGVyPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJlZHV4KGluaXRSZWR1eFN0b3JlKShNeUFwcCk7XG4iXX0= */\\n/*@ sourceURL=/Users/mellet/Development/CsGoNades/csgonades-client/pages/_app.tsx */\")));\n  }\n\n}\n\nexport default withRedux(initReduxStore)(MyApp);","map":{"version":3,"sources":["/Users/mellet/Development/CsGoNades/csgonades-client/pages/_app.tsx"],"names":["React","App","Head","withRedux","initReduxStore","PersistGate","Provider","MyApp","getInitialProps","Component","ctx","pageProps","render","props","store","__PERSISTOR"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgC,UAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACtB,eAAaO,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAA6D;AAC3D,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKE,KAAtC,CADO,CAEP;;AACA,UAAMC,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB,OACE,MAAC,WAAD;AAAa,MAAA,SAAS,EAAEA,KAAK,CAACC,WAA9B;AAA2C,MAAA,OAAO,EAAE;AAApD,OACE,MAAC,IAAD,QACE;AACE,MAAA,IAAI,EAAC,gEADP;AAEE,MAAA,GAAG,EAAC,YAFN;AAGE,MAAA,GAAG,EAAC,oBAHN;AAAA;AAAA,MADF,EAOE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,sEAFP;AAAA;AAAA,MAPF,CADF,EAcE,MAAC,SAAD,eAAeJ,SAAf;AAAA;AAAA,OAdF;AAAA;AAAA,6rGADF,CADF;AAuCD;;AAvDqB;;AA0DxB,eAAeR,SAAS,CAACC,cAAD,CAAT,CAA0BG,KAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport App, { AppContext } from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport { initReduxStore } from \"../src/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }: AppContext) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n    //@ts-ignore\n    const store = this.props.store as any;\n\n    return (\n      <Provider store={store}>\n        <PersistGate persistor={store.__PERSISTOR} loading={null}>\n          <Head>\n            <link\n              href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,700,900\"\n              rel=\"stylesheet\"\n              key=\"google-font-roboto\"\n            />\n\n            <link\n              rel=\"stylesheet\"\n              href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.11/semantic.min.css\"\n            />\n          </Head>\n\n          <Component {...pageProps} />\n\n          <style global jsx>{`\n            html {\n              -webkit-box-sizing: border-box;\n              -moz-box-sizing: border-box;\n              box-sizing: border-box;\n            }\n            *,\n            *:before,\n            *:after {\n              -webkit-box-sizing: inherit;\n              -moz-box-sizing: inherit;\n              box-sizing: inherit;\n            }\n\n            body {\n              font-family: \"Roboto\", sans-serif;\n            }\n          `}</style>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(initReduxStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}