{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { useState } from \"react\";\nexport var ImageUploader = function ImageUploader() {\n  var _useState = useState(\"\"),\n      imageSrc = _useState[0],\n      setImageSrc = _useState[1];\n\n  var _useState2 = useState({\n    aspect: 16 / 9,\n    unit: \"%\",\n    width: 50,\n    height: 50,\n    x: 25,\n    y: 25\n  }),\n      crop = _useState2[0],\n      setCrop = _useState2[1];\n\n  function onSelectFile(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      var reader = new FileReader();\n      reader.addEventListener(\"load\", function () {\n        var result = reader.result;\n        setImageSrc(result);\n      }, false);\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  function onImageLoaded(image) {\n    console.log(\"Loaded image\", image);\n  }\n\n  function onCropComplete(crop, _) {\n    console.log(\"onCropComplete\", crop);\n  }\n\n  function onCropChange(crop, _) {\n    setCrop(crop);\n    console.log(\"onCropChange\", crop);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"file\",\n    onChange: onSelectFile\n  }), __jsx(ReactCrop, {\n    src: imageSrc,\n    crop: crop,\n    onImageLoaded: onImageLoaded,\n    onComplete: onCropComplete,\n    onChange: onCropChange\n  }));\n};","map":{"version":3,"sources":["/Users/mellet/Development/CsGoNades/csgonades-client/src/components/ImageUploader.tsx"],"names":["ReactCrop","useState","ImageUploader","imageSrc","setImageSrc","aspect","unit","width","height","x","y","crop","setCrop","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","onImageLoaded","image","console","log","onCropComplete","_","onCropChange"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAO,qCAAP;AACA,SAASC,QAAT,QAAsC,OAAtC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACDD,QAAQ,CAAS,EAAT,CADP;AAAA,MAC1BE,QAD0B;AAAA,MAChBC,WADgB;;AAAA,mBAETH,QAAQ,CAAiB;AAC/CI,IAAAA,MAAM,EAAE,KAAK,CADkC;AAE/CC,IAAAA,IAAI,EAAE,GAFyC;AAG/CC,IAAAA,KAAK,EAAE,EAHwC;AAI/CC,IAAAA,MAAM,EAAE,EAJuC;AAK/CC,IAAAA,CAAC,EAAE,EAL4C;AAM/CC,IAAAA,CAAC,EAAE;AAN4C,GAAjB,CAFC;AAAA,MAE1BC,IAF0B;AAAA,MAEpBC,OAFoB;;AAWjC,WAASC,YAAT,CAAsBC,CAAtB,EAAwD;AACtD,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AAEAD,MAAAA,MAAM,CAACE,gBAAP,CACE,MADF,EAEE,YAAM;AACJ,YAAMC,MAAM,GAAGH,MAAM,CAACG,MAAtB;AACAjB,QAAAA,WAAW,CAACiB,MAAD,CAAX;AACD,OALH,EAME,KANF;AAQAH,MAAAA,MAAM,CAACI,aAAP,CAAqBR,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACD;AACF;;AAED,WAASO,aAAT,CAAuBC,KAAvB,EAAgD;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACD;;AAED,WAASG,cAAT,CAAwBhB,IAAxB,EAA8CiB,CAA9C,EAAwE;AACtEH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bf,IAA9B;AACD;;AAED,WAASkB,YAAT,CAAsBlB,IAAtB,EAA4CiB,CAA5C,EAAsE;AACpEhB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bf,IAA5B;AACD;;AAED,SACE,4BACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEE;AAA7B,IADF,EAEE,MAAC,SAAD;AACE,IAAA,GAAG,EAAEV,QADP;AAEE,IAAA,IAAI,EAAEQ,IAFR;AAGE,IAAA,aAAa,EAAEY,aAHjB;AAIE,IAAA,UAAU,EAAEI,cAJd;AAKE,IAAA,QAAQ,EAAEE;AALZ,IAFF,CADF;AAYD,CApDM","sourcesContent":["import ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport { useState, ChangeEvent } from \"react\";\n\nexport const ImageUploader = () => {\n  const [imageSrc, setImageSrc] = useState<string>(\"\");\n  const [crop, setCrop] = useState<ReactCrop.Crop>({\n    aspect: 16 / 9,\n    unit: \"%\",\n    width: 50,\n    height: 50,\n    x: 25,\n    y: 25\n  });\n\n  function onSelectFile(e: ChangeEvent<HTMLInputElement>) {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n\n      reader.addEventListener(\n        \"load\",\n        () => {\n          const result = reader.result as string;\n          setImageSrc(result);\n        },\n        false\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  function onImageLoaded(image: HTMLImageElement) {\n    console.log(\"Loaded image\", image);\n  }\n\n  function onCropComplete(crop: ReactCrop.Crop, _: ReactCrop.PercentCrop) {\n    console.log(\"onCropComplete\", crop);\n  }\n\n  function onCropChange(crop: ReactCrop.Crop, _: ReactCrop.PercentCrop) {\n    setCrop(crop);\n    console.log(\"onCropChange\", crop);\n  }\n\n  return (\n    <>\n      <input type=\"file\" onChange={onSelectFile} />\n      <ReactCrop\n        src={imageSrc}\n        crop={crop}\n        onImageLoaded={onImageLoaded}\n        onComplete={onCropComplete}\n        onChange={onCropChange}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}