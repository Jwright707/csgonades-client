{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { Layout } from \"../components/layout/layout\";\nimport { GfycatPlayerContrainer } from \"../components/nadepage/GfycatPlayerContainer\";\nimport { Button, Input, Segment, Grid, Divider, Header, Icon } from \"semantic-ui-react\";\nimport { ImageUploader } from \"../components/ImageUploader\";\nimport { NewNadeImagePlaceholder } from \"../components/newnade/NewNadeImagePlaceholder\";\nimport { NewNadeGfycatModal } from \"../components/newnade/NewNadeGfycatModal\";\n\nvar NewNadePage = function NewNadePage() {\n  var _useState = useState(false),\n      isGfycatModalVisisble = _useState[0],\n      setIsGfycatModalVisisble = _useState[1];\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"jsx-3344256073\" + \" \" + \"nade-new-container\"\n  }, __jsx(\"h2\", {\n    className: \"jsx-3344256073\"\n  }, \"Add new nade\"), __jsx(Segment, {\n    placeholder: true\n  }, __jsx(Grid, {\n    columns: 2,\n    stackable: true,\n    textAlign: \"center\"\n  }, __jsx(Divider, {\n    vertical: true\n  }, \"And\"), __jsx(Grid.Row, {\n    verticalAlign: \"middle\"\n  }, __jsx(Grid.Column, null, __jsx(Header, {\n    icon: true\n  }, __jsx(Icon, {\n    name: \"video\"\n  }), \"Gfycat\"), __jsx(\"br\", {\n    className: \"jsx-3344256073\"\n  }), __jsx(Button, {\n    primary: true\n  }, \"Add\")), __jsx(Grid.Column, null, __jsx(NewNadeImagePlaceholder, null))))), __jsx(Button, {\n    disabled: true,\n    color: \"green\"\n  }, \"Submit\")), __jsx(NewNadeGfycatModal, {\n    visible: isGfycatModalVisisble,\n    onDismiss: function onDismiss() {\n      return setIsGfycatModalVisisble(false);\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3344256073\"\n  }, \".nade-new-container.jsx-3344256073{margin:18px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tZWxsZXQvRGV2ZWxvcG1lbnQvQ3NHb05hZGVzL2NzZ29uYWRlcy1jbGllbnQvc3JjL3BhZ2Vjb250YWluZXJzL25ld25hZGVwYWdlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRFMsQUFHeUIsWUFDZCIsImZpbGUiOiIvVXNlcnMvbWVsbGV0L0RldmVsb3BtZW50L0NzR29OYWRlcy9jc2dvbmFkZXMtY2xpZW50L3NyYy9wYWdlY29udGFpbmVycy9uZXduYWRlcGFnZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGQywgdXNlUmVkdWNlciwgQ2hhbmdlRXZlbnQsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBMYXlvdXQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9sYXlvdXQvbGF5b3V0XCI7XG5pbXBvcnQgeyBHZnljYXRQbGF5ZXJDb250cmFpbmVyIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvbmFkZXBhZ2UvR2Z5Y2F0UGxheWVyQ29udGFpbmVyXCI7XG5pbXBvcnQge1xuICBCdXR0b24sXG4gIElucHV0LFxuICBTZWdtZW50LFxuICBHcmlkLFxuICBEaXZpZGVyLFxuICBIZWFkZXIsXG4gIEljb25cbn0gZnJvbSBcInNlbWFudGljLXVpLXJlYWN0XCI7XG5pbXBvcnQgeyBJbWFnZVVwbG9hZGVyIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvSW1hZ2VVcGxvYWRlclwiO1xuaW1wb3J0IHsgTmV3TmFkZUltYWdlUGxhY2Vob2xkZXIgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9uZXduYWRlL05ld05hZGVJbWFnZVBsYWNlaG9sZGVyXCI7XG5pbXBvcnQgeyBOZXdOYWRlR2Z5Y2F0TW9kYWwgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9uZXduYWRlL05ld05hZGVHZnljYXRNb2RhbFwiO1xuXG5jb25zdCBOZXdOYWRlUGFnZTogRkMgPSAoKSA9PiB7XG4gIGNvbnN0IFtpc0dmeWNhdE1vZGFsVmlzaXNibGUsIHNldElzR2Z5Y2F0TW9kYWxWaXNpc2JsZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYWRlLW5ldy1jb250YWluZXJcIj5cbiAgICAgICAgPGgyPkFkZCBuZXcgbmFkZTwvaDI+XG4gICAgICAgIDxTZWdtZW50IHBsYWNlaG9sZGVyPlxuICAgICAgICAgIDxHcmlkIGNvbHVtbnM9ezJ9IHN0YWNrYWJsZSB0ZXh0QWxpZ249XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIDxEaXZpZGVyIHZlcnRpY2FsPkFuZDwvRGl2aWRlcj5cblxuICAgICAgICAgICAgPEdyaWQuUm93IHZlcnRpY2FsQWxpZ249XCJtaWRkbGVcIj5cbiAgICAgICAgICAgICAgPEdyaWQuQ29sdW1uPlxuICAgICAgICAgICAgICAgIDxIZWFkZXIgaWNvbj5cbiAgICAgICAgICAgICAgICAgIDxJY29uIG5hbWU9XCJ2aWRlb1wiIC8+XG4gICAgICAgICAgICAgICAgICBHZnljYXRcbiAgICAgICAgICAgICAgICA8L0hlYWRlcj5cbiAgICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgICA8QnV0dG9uIHByaW1hcnk+QWRkPC9CdXR0b24+XG4gICAgICAgICAgICAgIDwvR3JpZC5Db2x1bW4+XG5cbiAgICAgICAgICAgICAgPEdyaWQuQ29sdW1uPlxuICAgICAgICAgICAgICAgIDxOZXdOYWRlSW1hZ2VQbGFjZWhvbGRlciAvPlxuICAgICAgICAgICAgICA8L0dyaWQuQ29sdW1uPlxuICAgICAgICAgICAgPC9HcmlkLlJvdz5cbiAgICAgICAgICA8L0dyaWQ+XG4gICAgICAgIDwvU2VnbWVudD5cbiAgICAgICAgPEJ1dHRvbiBkaXNhYmxlZCBjb2xvcj1cImdyZWVuXCI+XG4gICAgICAgICAgU3VibWl0XG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgICA8TmV3TmFkZUdmeWNhdE1vZGFsXG4gICAgICAgIHZpc2libGU9e2lzR2Z5Y2F0TW9kYWxWaXNpc2JsZX1cbiAgICAgICAgb25EaXNtaXNzPXsoKSA9PiBzZXRJc0dmeWNhdE1vZGFsVmlzaXNibGUoZmFsc2UpfVxuICAgICAgLz5cbiAgICAgIDxzdHlsZSBqc3g+XG4gICAgICAgIHtgXG4gICAgICAgICAgLm5hZGUtbmV3LWNvbnRhaW5lciB7XG4gICAgICAgICAgICBtYXJnaW46IDE4cHg7XG4gICAgICAgICAgfVxuICAgICAgICBgfVxuICAgICAgPC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hZGUtbmV3LWNvbnRhaW5lclwiPlxuICAgICAgICB7c3RlcCA9PT0gXCJpbnRyb1wiICYmIChcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hZGUtbmV3LXN0ZXAtaW50cm9cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFkZS1uZXctZXhwbGVuYXRpb25cIj5cbiAgICAgICAgICAgICAgPGgyPkFkZCBuZXcgbmFkZTwvaDI+XG4gICAgICAgICAgICAgIDxoMz5SZXF1aXJlbWVudHM8L2gzPlxuICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxpPkdmeWNhdCB2aWRlbyBvZiB5b3UgcGVyZm9ybWluZyB0aGUgdGhyb3c8L2xpPlxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgVXNlIDxjb2RlPmNsX2RyYXdfb25seV9kZWF0aG5vdGljZXMgMTwvY29kZT4gdG8gcmVtb3ZlIHlvdXJcbiAgICAgICAgICAgICAgICAgICAgSFVEIHdoZW4gcmVjb3JkaW5nLlxuICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDxsaT5JbWFnZSBvZiB0aGUgcmVzdWx0IG9mIHRoZSB0cm93PC9saT5cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgPEJ1dHRvbiBwcmltYXJ5IG9uQ2xpY2s9e25leHRTdGVwfT5cbiAgICAgICAgICAgICAgICBMZXQncyBnbyFcbiAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFkZS1uZXctZXhhbXBsZXNcIj5cbiAgICAgICAgICAgICAgPGgzPkV4YW1wbGUgZ2Z5Y2F0IHZpZGVvPC9oMz5cbiAgICAgICAgICAgICAgPEdmeWNhdFBsYXllckNvbnRyYWluZXJcbiAgICAgICAgICAgICAgICBkaXNhYmxlRWRpdFxuICAgICAgICAgICAgICAgIGdmeUlEPVwiSWRpb3RpY0FkdmVudHVyb3VzQXJhYmlhbm9yeXhcIlxuICAgICAgICAgICAgICAgIGFzcGVjdD1cIjE2OjEwXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGgzPkV4YW1wbGUgcmVzdWx0IGltYWdlPC9oMz5cbiAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICAgICAgICAgICAgc3JjPVwiaHR0cDovL3MzLWV1LWNlbnRyYWwtMS5hbWF6b25hd3MuY29tL2NzZ29uYWRlcy9uYWRlcy9yZXN1bHRfaW1hZ2VzLzAwMC8wMDAvMzE5L2xhcmdlL3Ntb2tlLmpwZz8xNTA3NzM4MDczXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgICB7c3RlcCA9PT0gXCJnZnljYXRcIiAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYWRlLW5ldy1zdGVwLWdmeWNhdFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYWRlLW5ldy1leHBsZW5hdGlvblwiPlxuICAgICAgICAgICAgICA8aDI+R2Z5Y2F0PC9oMj5cbiAgICAgICAgICAgICAgTGV0J3MgYWRkIHlvdXIgZ2Z5Y2F0IHZpZGVvIVxuICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25HeWZjYXRJbnB1dENoYW5nZX1cbiAgICAgICAgICAgICAgICBpY29uPXt7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBcImNoZWNrXCIsXG4gICAgICAgICAgICAgICAgICBjaXJjdWxhcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGxpbms6IHRydWUsXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkdmeWNhdFNhdmVcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiR2ZyeWNhdCB1cmwgb3IgaWQuLi5cIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hZGUtbmV3LWFjdGlvblwiPlxuICAgICAgICAgICAgICA8R2Z5Y2F0UGxheWVyQ29udHJhaW5lciBkaXNhYmxlRWRpdCBnZnlJRD17c3RhdGUuZ2Z5Y2F0SUR9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgICAge3N0ZXAgPT09IFwiaW1hZ2VcIiAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYWRlLW5ldy1zdGVwLWltYWdlXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hZGUtbmV3LWV4cGxlbmF0aW9uXCI+XG4gICAgICAgICAgICAgIDxoMj5SZXN1bHQgaW1hZ2U8L2gyPlxuICAgICAgICAgICAgICBMZXQncyBhZGQgeW91ciByZXN1bHQgaW1hZ2UhXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibmFkZS1uZXctYWN0aW9uXCI+XG4gICAgICAgICAgICAgIDxJbWFnZVVwbG9hZGVyIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuZXhwb3J0IHsgTmV3TmFkZVBhZ2UgfTtcbiJdfQ== */\\n/*@ sourceURL=/Users/mellet/Development/CsGoNades/csgonades-client/src/pagecontainers/newnadepage.tsx */\"));\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"nade-new-container\"\n  }, step === \"intro\" && __jsx(\"div\", {\n    className: \"nade-new-step-intro\"\n  }, __jsx(\"div\", {\n    className: \"nade-new-explenation\"\n  }, __jsx(\"h2\", null, \"Add new nade\"), __jsx(\"h3\", null, \"Requirements\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Gfycat video of you performing the throw\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Use \", __jsx(\"code\", null, \"cl_draw_only_deathnotices 1\"), \" to remove your HUD when recording.\")), __jsx(\"li\", null, \"Image of the result of the trow\")), __jsx(Button, {\n    primary: true,\n    onClick: nextStep\n  }, \"Let's go!\")), __jsx(\"div\", {\n    className: \"nade-new-examples\"\n  }, __jsx(\"h3\", null, \"Example gfycat video\"), __jsx(GfycatPlayerContrainer, {\n    disableEdit: true,\n    gfyID: \"IdioticAdventurousArabianoryx\",\n    aspect: \"16:10\"\n  }), __jsx(\"h3\", null, \"Example result image\"), __jsx(\"img\", {\n    width: \"100%\",\n    src: \"http://s3-eu-central-1.amazonaws.com/csgonades/nades/result_images/000/000/319/large/smoke.jpg?1507738073\"\n  }))), step === \"gfycat\" && __jsx(\"div\", {\n    className: \"nade-new-step-gfycat\"\n  }, __jsx(\"div\", {\n    className: \"nade-new-explenation\"\n  }, __jsx(\"h2\", null, \"Gfycat\"), \"Let's add your gfycat video!\", __jsx(Input, {\n    onChange: onGyfcatInputChange,\n    icon: {\n      name: \"check\",\n      circular: true,\n      link: true,\n      onClick: onGfycatSave\n    },\n    placeholder: \"Gfrycat url or id...\"\n  })), __jsx(\"div\", {\n    className: \"nade-new-action\"\n  }, __jsx(GfycatPlayerContrainer, {\n    disableEdit: true,\n    gfyID: state.gfycatID\n  }))), step === \"image\" && __jsx(\"div\", {\n    className: \"nade-new-step-image\"\n  }, __jsx(\"div\", {\n    className: \"nade-new-explenation\"\n  }, __jsx(\"h2\", null, \"Result image\"), \"Let's add your result image!\"), __jsx(\"div\", {\n    className: \"nade-new-action\"\n  }, __jsx(ImageUploader, null)))));\n};\n\nexport { NewNadePage };","map":{"version":3,"sources":["/Users/mellet/Development/CsGoNades/csgonades-client/src/pagecontainers/newnadepage.tsx"],"names":["useState","Layout","GfycatPlayerContrainer","Button","Input","Segment","Grid","Divider","Header","Icon","ImageUploader","NewNadeImagePlaceholder","NewNadeGfycatModal","NewNadePage","isGfycatModalVisisble","setIsGfycatModalVisisble","step","nextStep","onGyfcatInputChange","name","circular","link","onClick","onGfycatSave","state","gfycatID"],"mappings":";;;AAAA,SAAsCA,QAAtC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,sBAAT,QAAuC,8CAAvC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,IAPF,QAQO,mBARP;AASA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,uBAAT,QAAwC,+CAAxC;AACA,SAASC,kBAAT,QAAmC,0CAAnC;;AAEA,IAAMC,WAAe,GAAG,SAAlBA,WAAkB,GAAM;AAAA,kBAC8Bb,QAAQ,CAAC,KAAD,CADtC;AAAA,MACrBc,qBADqB;AAAA,MACEC,wBADF;;AAG5B,SACE,MAAC,MAAD,QACE;AAAA,wCAAe;AAAf,KACE;AAAA;AAAA,oBADF,EAEE,MAAC,OAAD;AAAS,IAAA,WAAW;AAApB,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,SAAS,MAA3B;AAA4B,IAAA,SAAS,EAAC;AAAtC,KACE,MAAC,OAAD;AAAS,IAAA,QAAQ;AAAjB,WADF,EAGE,MAAC,IAAD,CAAM,GAAN;AAAU,IAAA,aAAa,EAAC;AAAxB,KACE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,MAAD;AAAQ,IAAA,IAAI;AAAZ,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADF,WADF,EAKE;AAAA;AAAA,IALF,EAME,MAAC,MAAD;AAAQ,IAAA,OAAO;AAAf,WANF,CADF,EAUE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,uBAAD,OADF,CAVF,CAHF,CADF,CAFF,EAsBE,MAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,KAAK,EAAC;AAAvB,cAtBF,CADF,EA2BE,MAAC,kBAAD;AACE,IAAA,OAAO,EAAED,qBADX;AAEE,IAAA,SAAS,EAAE;AAAA,aAAMC,wBAAwB,CAAC,KAAD,CAA9B;AAAA;AAFb,IA3BF;AAAA;AAAA,4tMADF;AA0CA,SACE,MAAC,MAAD,QACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGC,IAAI,KAAK,OAAT,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,iCADF,EAEE,iCAFF,EAGE,kBACE,6DADF,EAEE,kBACE,0BACM,kDADN,wCADF,CAFF,EAQE,oDARF,CAHF,EAaE,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEC;AAAzB,iBAbF,CADF,EAkBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,yCADF,EAEE,MAAC,sBAAD;AACE,IAAA,WAAW,MADb;AAEE,IAAA,KAAK,EAAC,+BAFR;AAGE,IAAA,MAAM,EAAC;AAHT,IAFF,EAOE,yCAPF,EAQE;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,GAAG,EAAC;AAFN,IARF,CAlBF,CAFJ,EAmCGD,IAAI,KAAK,QAAT,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,2BADF,kCAGE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAEE,mBADZ;AAEE,IAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,OADF;AAEJC,MAAAA,QAAQ,EAAE,IAFN;AAGJC,MAAAA,IAAI,EAAE,IAHF;AAIJC,MAAAA,OAAO,EAAEC;AAJL,KAFR;AAQE,IAAA,WAAW,EAAC;AARd,IAHF,CADF,EAeE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,sBAAD;AAAwB,IAAA,WAAW,MAAnC;AAAoC,IAAA,KAAK,EAAEC,KAAK,CAACC;AAAjD,IADF,CAfF,CApCJ,EAwDGT,IAAI,KAAK,OAAT,IACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,iCADF,iCADF,EAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,aAAD,OADF,CALF,CAzDJ,CADF,CADF;AAwED,CArHD;;AAuHA,SAASH,WAAT","sourcesContent":["import { FC, useReducer, ChangeEvent, useState } from \"react\";\nimport { Layout } from \"../components/layout/layout\";\nimport { GfycatPlayerContrainer } from \"../components/nadepage/GfycatPlayerContainer\";\nimport {\n  Button,\n  Input,\n  Segment,\n  Grid,\n  Divider,\n  Header,\n  Icon\n} from \"semantic-ui-react\";\nimport { ImageUploader } from \"../components/ImageUploader\";\nimport { NewNadeImagePlaceholder } from \"../components/newnade/NewNadeImagePlaceholder\";\nimport { NewNadeGfycatModal } from \"../components/newnade/NewNadeGfycatModal\";\n\nconst NewNadePage: FC = () => {\n  const [isGfycatModalVisisble, setIsGfycatModalVisisble] = useState(false);\n\n  return (\n    <Layout>\n      <div className=\"nade-new-container\">\n        <h2>Add new nade</h2>\n        <Segment placeholder>\n          <Grid columns={2} stackable textAlign=\"center\">\n            <Divider vertical>And</Divider>\n\n            <Grid.Row verticalAlign=\"middle\">\n              <Grid.Column>\n                <Header icon>\n                  <Icon name=\"video\" />\n                  Gfycat\n                </Header>\n                <br />\n                <Button primary>Add</Button>\n              </Grid.Column>\n\n              <Grid.Column>\n                <NewNadeImagePlaceholder />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <Button disabled color=\"green\">\n          Submit\n        </Button>\n      </div>\n      <NewNadeGfycatModal\n        visible={isGfycatModalVisisble}\n        onDismiss={() => setIsGfycatModalVisisble(false)}\n      />\n      <style jsx>\n        {`\n          .nade-new-container {\n            margin: 18px;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n\n  return (\n    <Layout>\n      <div className=\"nade-new-container\">\n        {step === \"intro\" && (\n          <div className=\"nade-new-step-intro\">\n            <div className=\"nade-new-explenation\">\n              <h2>Add new nade</h2>\n              <h3>Requirements</h3>\n              <ul>\n                <li>Gfycat video of you performing the throw</li>\n                <ul>\n                  <li>\n                    Use <code>cl_draw_only_deathnotices 1</code> to remove your\n                    HUD when recording.\n                  </li>\n                </ul>\n                <li>Image of the result of the trow</li>\n              </ul>\n              <Button primary onClick={nextStep}>\n                Let's go!\n              </Button>\n            </div>\n            <div className=\"nade-new-examples\">\n              <h3>Example gfycat video</h3>\n              <GfycatPlayerContrainer\n                disableEdit\n                gfyID=\"IdioticAdventurousArabianoryx\"\n                aspect=\"16:10\"\n              />\n              <h3>Example result image</h3>\n              <img\n                width=\"100%\"\n                src=\"http://s3-eu-central-1.amazonaws.com/csgonades/nades/result_images/000/000/319/large/smoke.jpg?1507738073\"\n              />\n            </div>\n          </div>\n        )}\n        {step === \"gfycat\" && (\n          <div className=\"nade-new-step-gfycat\">\n            <div className=\"nade-new-explenation\">\n              <h2>Gfycat</h2>\n              Let's add your gfycat video!\n              <Input\n                onChange={onGyfcatInputChange}\n                icon={{\n                  name: \"check\",\n                  circular: true,\n                  link: true,\n                  onClick: onGfycatSave\n                }}\n                placeholder=\"Gfrycat url or id...\"\n              />\n            </div>\n            <div className=\"nade-new-action\">\n              <GfycatPlayerContrainer disableEdit gfyID={state.gfycatID} />\n            </div>\n          </div>\n        )}\n        {step === \"image\" && (\n          <div className=\"nade-new-step-image\">\n            <div className=\"nade-new-explenation\">\n              <h2>Result image</h2>\n              Let's add your result image!\n            </div>\n            <div className=\"nade-new-action\">\n              <ImageUploader />\n            </div>\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport { NewNadePage };\n"]},"metadata":{},"sourceType":"module"}