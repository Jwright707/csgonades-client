{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { CSGNModal } from \"../CSGNModal\";\nimport { Input, Button } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nexport var NewNadeGfycatModal = function NewNadeGfycatModal(_ref) {\n  var onDismiss = _ref.onDismiss,\n      visible = _ref.visible;\n\n  var _useState = useState(false),\n      isLoading = _useState[0];\n\n  var _useState2 = useState(\"\"),\n      gfycatValue = _useState2[0],\n      setGfycatValue = _useState2[1];\n\n  return __jsx(React.Fragment, null, __jsx(CSGNModal, {\n    visible: visible,\n    onDismiss: onDismiss,\n    title: \"Add gfycat video\"\n  }, __jsx(Input, {\n    loading: isLoading,\n    placeholder: \"Gfycat url or id\",\n    value: gfycatValue,\n    onChange: function onChange(e) {\n      setGfycatValue(e.target.value);\n    }\n  }), __jsx(Button, null, \"Add\")));\n};","map":{"version":3,"sources":["/Users/mellet/Development/CsGoNades/csgonades-client/src/components/newnade/NewNadeGfycatModal.tsx"],"names":["CSGNModal","Input","Button","useState","NewNadeGfycatModal","onDismiss","visible","isLoading","gfycatValue","setGfycatValue","e","target","value"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAOA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAmC;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;;AAAA,kBAC/CH,QAAQ,CAAC,KAAD,CADuC;AAAA,MAC5DI,SAD4D;;AAAA,mBAE7BJ,QAAQ,CAAC,EAAD,CAFqB;AAAA,MAE5DK,WAF4D;AAAA,MAE/CC,cAF+C;;AAGnE,SACE,4BACE,MAAC,SAAD;AACE,IAAA,OAAO,EAAEH,OADX;AAEE,IAAA,SAAS,EAAED,SAFb;AAGE,IAAA,KAAK,EAAC;AAHR,KAKE,MAAC,KAAD;AACE,IAAA,OAAO,EAAEE,SADX;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAEC,WAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAE,CAAC,EAAI;AACbD,MAAAA,cAAc,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;AANH,IALF,EAaE,MAAC,MAAD,cAbF,CADF,CADF;AAmBD,CAtBM","sourcesContent":["import { CSGNModal } from \"../CSGNModal\";\nimport { Input, Button } from \"semantic-ui-react\";\nimport { useState } from \"react\";\n\ntype Props = {\n  visible: boolean;\n  onDismiss: () => void;\n};\n\nexport const NewNadeGfycatModal = ({ onDismiss, visible }: Props) => {\n  const [isLoading] = useState(false);\n  const [gfycatValue, setGfycatValue] = useState(\"\");\n  return (\n    <>\n      <CSGNModal\n        visible={visible}\n        onDismiss={onDismiss}\n        title=\"Add gfycat video\"\n      >\n        <Input\n          loading={isLoading}\n          placeholder=\"Gfycat url or id\"\n          value={gfycatValue}\n          onChange={e => {\n            setGfycatValue(e.target.value);\n          }}\n        />\n        <Button>Add</Button>\n      </CSGNModal>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}