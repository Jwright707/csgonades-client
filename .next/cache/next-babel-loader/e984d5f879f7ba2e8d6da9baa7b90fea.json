{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport { AuthReducer } from \"./AuthStore/AuthReducer\";\nvar rootReducer = combineReducers({\n  auth: AuthReducer\n});\nexport var initReduxStore = function initReduxStore(initialState) {\n  var store;\n  var isClient = true;\n\n  if (isClient) {\n    var _require = require(\"redux-persist\"),\n        persistReducer = _require.persistReducer;\n\n    var storage = require(\"redux-persist/lib/storage\")[\"default\"]; // Mark some reducer as persisted on client\n\n\n    var rootReducerClient = combineReducers({\n      auth: persistReducer({\n        key: \"auth\",\n        storage: storage\n      }, AuthReducer)\n    });\n    store = createStore(rootReducerClient, initialState);\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(rootReducer, initialState);\n  }\n\n  return store;\n};","map":{"version":3,"sources":["/Users/mellet/Development/CsGoNades/csgonades-client/src/store/index.ts"],"names":["createStore","combineReducers","persistStore","AuthReducer","rootReducer","auth","initReduxStore","initialState","store","isClient","require","persistReducer","storage","rootReducerClient","key","__PERSISTOR"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,IAAMC,WAAW,GAAGH,eAAe,CAAC;AAClCI,EAAAA,IAAI,EAAEF;AAD4B,CAAD,CAAnC;AAMA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAA4B;AACxD,MAAIC,KAAJ;AACA,MAAMC,QAAQ,OAAd;;AAEA,MAAIA,QAAJ,EAAc;AAAA,mBACeC,OAAO,CAAC,eAAD,CADtB;AAAA,QACJC,cADI,YACJA,cADI;;AAGZ,QAAMC,OAAO,GAAGF,OAAO,CAAC,2BAAD,CAAP,WAAhB,CAHY,CAKZ;;;AACA,QAAMG,iBAAiB,GAAGZ,eAAe,CAAC;AACxCI,MAAAA,IAAI,EAAEM,cAAc,CAAC;AAAEG,QAAAA,GAAG,EAAE,MAAP;AAAeF,QAAAA,OAAO,EAAPA;AAAf,OAAD,EAA2BT,WAA3B;AADoB,KAAD,CAAzC;AAIAK,IAAAA,KAAK,GAAGR,WAAW,CAACa,iBAAD,EAAoBN,YAApB,CAAnB;AACAC,IAAAA,KAAK,CAACO,WAAN,GAAoBb,YAAY,CAACM,KAAD,CAAhC;AACD,GAZD,MAYO;AACLA,IAAAA,KAAK,GAAGR,WAAW,CAACI,WAAD,EAAcG,YAAd,CAAnB;AACD;;AACD,SAAOC,KAAP;AACD,CApBM","sourcesContent":["import { createStore, combineReducers } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport { AuthReducer } from \"./AuthStore/AuthReducer\";\n\nconst rootReducer = combineReducers({\n  auth: AuthReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport const initReduxStore = (initialState: AppState) => {\n  let store;\n  const isClient = typeof window !== \"undefined\";\n\n  if (isClient) {\n    const { persistReducer } = require(\"redux-persist\");\n\n    const storage = require(\"redux-persist/lib/storage\").default;\n\n    // Mark some reducer as persisted on client\n    const rootReducerClient = combineReducers({\n      auth: persistReducer({ key: \"auth\", storage }, AuthReducer)\n    });\n\n    store = createStore(rootReducerClient, initialState);\n    store.__PERSISTOR = persistStore(store);\n  } else {\n    store = createStore(rootReducer, initialState);\n  }\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}