{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Header, Icon, Button } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nimport { GfyCatPlayer } from \"../nadepage/GfycatPlayer\";\nimport { NewNadeGfycatModal } from \"./NewNadeGfycatModal\";\nexport const NewNadeGfycat = () => {\n  const {\n    0: gfycatID,\n    1: setGfycatID\n  } = useState(null);\n  const {\n    0: isGfycatModalVisisble,\n    1: setIsGfycatModalVisisble\n  } = useState(false);\n\n  function applyGfycatID(gfycatID) {\n    setGfycatID(gfycatID);\n  }\n\n  return __jsx(\"div\", null, gfycatID && __jsx(React.Fragment, null, __jsx(GfyCatPlayer, {\n    gfycatID: gfycatID\n  }), __jsx(Button, {\n    primary: true,\n    onClick: () => setIsGfycatModalVisisble(true)\n  }, \"Edit\")), !gfycatID && __jsx(React.Fragment, null, __jsx(Header, {\n    icon: true\n  }, __jsx(Icon, {\n    name: \"video\"\n  }), \"Gfycat\"), __jsx(\"br\", null), __jsx(Button, {\n    primary: true,\n    onClick: () => setIsGfycatModalVisisble(true)\n  }, \"Add\")), __jsx(NewNadeGfycatModal, {\n    setGfycat: applyGfycatID,\n    visible: isGfycatModalVisisble,\n    onDismiss: () => setIsGfycatModalVisisble(false)\n  }));\n};","map":{"version":3,"sources":["/Users/mellet/Development/CsGoNades/csgonades-client/src/components/newnade/NewNadeGfycat.tsx"],"names":["Header","Icon","Button","useState","GfyCatPlayer","NewNadeGfycatModal","NewNadeGfycat","gfycatID","setGfycatID","isGfycatModalVisisble","setIsGfycatModalVisisble","applyGfycatID"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAgB,IAAhB,CAAxC;AACA,QAAM;AAAA,OAACM,qBAAD;AAAA,OAAwBC;AAAxB,MAAoDP,QAAQ,CAAC,KAAD,CAAlE;;AAEA,WAASQ,aAAT,CAAuBJ,QAAvB,EAAyC;AACvCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AAED,SACE,mBACGA,QAAQ,IACP,4BACE,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA;AAAxB,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAE,MAAMG,wBAAwB,CAAC,IAAD;AAAvD,YAFF,CAFJ,EASG,CAACH,QAAD,IACC,4BACE,MAAC,MAAD;AAAQ,IAAA,IAAI;AAAZ,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADF,WADF,EAKE,iBALF,EAME,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAE,MAAMG,wBAAwB,CAAC,IAAD;AAAvD,WANF,CAVJ,EAqBE,MAAC,kBAAD;AACE,IAAA,SAAS,EAAEC,aADb;AAEE,IAAA,OAAO,EAAEF,qBAFX;AAGE,IAAA,SAAS,EAAE,MAAMC,wBAAwB,CAAC,KAAD;AAH3C,IArBF,CADF;AA6BD,CArCM","sourcesContent":["import { Header, Icon, Button } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nimport { GfyCatPlayer } from \"../nadepage/GfycatPlayer\";\nimport { NewNadeGfycatModal } from \"./NewNadeGfycatModal\";\n\nexport const NewNadeGfycat = () => {\n  const [gfycatID, setGfycatID] = useState<string | null>(null);\n  const [isGfycatModalVisisble, setIsGfycatModalVisisble] = useState(false);\n\n  function applyGfycatID(gfycatID: string) {\n    setGfycatID(gfycatID);\n  }\n\n  return (\n    <div>\n      {gfycatID && (\n        <>\n          <GfyCatPlayer gfycatID={gfycatID} />\n          <Button primary onClick={() => setIsGfycatModalVisisble(true)}>\n            Edit\n          </Button>\n        </>\n      )}\n      {!gfycatID && (\n        <>\n          <Header icon>\n            <Icon name=\"video\" />\n            Gfycat\n          </Header>\n          <br />\n          <Button primary onClick={() => setIsGfycatModalVisisble(true)}>\n            Add\n          </Button>\n        </>\n      )}\n      <NewNadeGfycatModal\n        setGfycat={applyGfycatID}\n        visible={isGfycatModalVisisble}\n        onDismiss={() => setIsGfycatModalVisisble(false)}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}