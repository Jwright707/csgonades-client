{"version":3,"file":"static/webpack/static/development/pages/newnade.js.caad2e436c2e82e5995f.hot-update.js","sources":["webpack:///./src/pagecontainers/newnadepage.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\nimport { Layout } from \"../components/layout/layout\";\nimport {\n  Button,\n  Segment,\n  Grid,\n  Divider,\n  Header,\n  Icon\n} from \"semantic-ui-react\";\nimport { NewNadeImagePlaceholder } from \"../components/newnade/NewNadeImagePlaceholder\";\nimport { NewNadeGfycatModal } from \"../components/newnade/NewNadeGfycatModal\";\nimport { GfyCatPlayer } from \"../components/nadepage/GfycatPlayer\";\n\nconst NewNadePage: FC = () => {\n  const [isGfycatModalVisisble, setIsGfycatModalVisisble] = useState(false);\n  const [gfycatID, setGfycatID] = useState<string | null>(null);\n\n  return (\n    <Layout>\n      <div className=\"nade-new-container\">\n        <h2>Add new nade</h2>\n        <Segment placeholder>\n          <Grid columns={2} stackable textAlign=\"center\">\n            <Divider vertical>And</Divider>\n\n            <Grid.Row verticalAlign=\"middle\">\n              <Grid.Column>\n                {!gfycatID && (\n                  <>\n                    <Header icon>\n                      <Icon name=\"video\" />\n                      Gfycat\n                    </Header>\n                    <br />\n                    <Button\n                      primary\n                      onClick={() => setIsGfycatModalVisisble(true)}\n                    >\n                      Add\n                    </Button>\n                  </>\n                )}\n\n                {gfycatID && <p>{<GfyCatPlayer gfycatID={gfycatID} />}</p>}\n              </Grid.Column>\n\n              <Grid.Column>\n                <NewNadeImagePlaceholder />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <Button disabled color=\"green\">\n          Submit\n        </Button>\n      </div>\n      <NewNadeGfycatModal\n        setGfycat={setGfycatID}\n        visible={isGfycatModalVisisble}\n        onDismiss={() => setIsGfycatModalVisisble(false)}\n      />\n\n      <style jsx>\n        {`\n          .nade-new-container {\n            margin: 18px;\n          }\n        `}\n      </style>\n    </Layout>\n  );\n};\n\nexport { NewNadePage };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AASA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAHA;AAtCA;AAAA;AAqDA;AACA;;;;;A","sourceRoot":""}